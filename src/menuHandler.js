const { MessageMedia } = require('whatsapp-web.js');
const path = require('path');
const fs = require('fs');
const { 
    MENU_PRINCIPAL, 
    MENSAGEM_GRUPO_OFERTAS, 
    LINKS, 
    MENSAGENS_ERRO 
} = require('./constants');
const { sendMessageWithTyping, log } = require('./utils');

class MenuHandler {
    constructor(client) {
        this.client = client;
    }

    // Mostra o menu principal
    async mostrarMenu(msg, name) {
        const chat = await msg.getChat();
        await sendMessageWithTyping(this.client, chat, msg.from, MENU_PRINCIPAL(name));
    }

    // Op√ß√£o 2 - Enviar curr√≠culo
    async enviarCurriculo(msg, chat) {
        await sendMessageWithTyping(this.client, chat, msg.from, 
            `Que bom que voc√™ tem interesse em trabalhar conosco! üòä

Para enviar seu curr√≠culo, por favor, mande um e-mail para: ${LINKS.EMAIL_CURRICULO}

Boa sorte! ü§û${MENSAGEM_GRUPO_OFERTAS}`
        );
    }

    // Op√ß√£o 3 - Grupo de promo√ß√µes
    async grupoPromocoes(msg, chat) {
        await sendMessageWithTyping(this.client, chat, msg.from, 
            `Oba! üéâ Fique por dentro de todas as nossas promo√ß√µes fresquinhas!

Clique no link abaixo para entrar no nosso grupo de promo√ß√µes do WhatsApp:
${LINKS.GRUPO_PROMOCOES}

Esperamos voc√™ l√°! üòâ`
        );
    }

    // Op√ß√£o 4 - Falar com equipe
    async falarComEquipe(msg, chat) {
        try {
            await sendMessageWithTyping(this.client, chat, msg.from, 
                `Para falar com nossa equipe, voc√™ pode:
üìû Ligar para: ${LINKS.TELEFONE} durante nosso hor√°rio comercial:
   ‚Ä¢ Segunda a S√°bado: 7h √†s 21h
   ‚Ä¢ Domingo: 7h √†s 14h
   
üí¨ Ou, se preferir, aguarde um momento que logo um de nossos atendentes ir√° te responder por aqui no WhatsApp.

Por favor, nos diga como podemos te ajudar.${MENSAGEM_GRUPO_OFERTAS}`
            );
            
            // Notifica internamente que o cliente est√° aguardando atendimento
            log('INFO', 'Cliente solicitou atendimento com a equipe', { from: msg.from, contato: (await msg.getContact()).pushname || "Cliente" });
        } catch (error) {
            log('ERRO', 'Erro ao processar solicita√ß√£o para falar com a equipe:', error);
        }
    }

    // Op√ß√£o 5 - Ver tabloide
    async verTabloide(msg, chat) {
        try {
            const tabloidePath = path.join(__dirname, '..', 'tabloide.png');
            
            if (fs.existsSync(tabloidePath)) {
                const media = MessageMedia.fromFilePath(tabloidePath);
                
                await sendMessageWithTyping(this.client, chat, msg.from, 
                    `Confira nossas ofertas incr√≠veis no tabloide desta semana! üì∞‚ú®

Boas compras! üõçÔ∏è${MENSAGEM_GRUPO_OFERTAS}`
                );
                
                await this.client.sendMessage(msg.from, media, {caption: 'Tabloide de ofertas do Supermercado Eta! üõí'});
            } else {
                log('AVISO', 'Arquivo do tabloide n√£o encontrado', { tabloidePath });
                await sendMessageWithTyping(this.client, chat, msg.from, MENSAGENS_ERRO.TABLOIDE_INDISPONIVEL);
            }
        } catch (error) {
            log('ERRO', 'Erro ao enviar tabloide:', error);
            await sendMessageWithTyping(this.client, chat, msg.from, MENSAGENS_ERRO.TABLOIDE_INDISPONIVEL);
        }
    }

    // Op√ß√£o 6 - Hor√°rio de funcionamento
    async horarioFuncionamento(msg, chat) {
        await sendMessageWithTyping(this.client, chat, msg.from, 
            `üìÖ Hor√°rio de Funcionamento do Supermercado Eta:

üïñ Segunda a S√°bado: das 7h √†s 21h
üïñ Domingo: das 7h √†s 14h

üìû Telefone: ${LINKS.TELEFONE}

Estamos sempre √† disposi√ß√£o para atend√™-lo! üòä${MENSAGEM_GRUPO_OFERTAS}`
        );
    }

    // Comando inv√°lido
    async comandoInvalido(msg, chat) {
        await sendMessageWithTyping(this.client, chat, msg.from, MENSAGENS_ERRO.COMANDO_INVALIDO);
    }

    // Processar comandos do tipo !comando
    async processarComando(msg) {
        try {
            const comando = msg.body.trim().toLowerCase().replace('!', '');
            const chat = await msg.getChat();
            const name = (await msg.getContact()).pushname || "Cliente";
            
            switch (comando) {
                case 'menu':
                    await this.mostrarMenu(msg, name);
                    break;
                case 'curriculo':
                case 'curr√≠culo':
                    await this.enviarCurriculo(msg, chat);
                    break;
                case 'promocoes':
                case 'promo√ß√µes':
                    await this.grupoPromocoes(msg, chat);
                    break;
                case 'ajuda':
                case 'help':
                    await this.falarComEquipe(msg, chat);
                    break;
                case 'tabloide':
                case 'ofertas':
                    await this.verTabloide(msg, chat);
                    break;
                case 'horario':
                case 'hor√°rio':
                    await this.horarioFuncionamento(msg, chat);
                    break;
                default:
                    await this.comandoInvalido(msg, chat);
                    break;
            }
        } catch (error) {
            log('ERRO', 'Erro ao processar comando:', error);
        }
    }
}

module.exports = MenuHandler; 